"""
# Напишите функцию, которая по заданной текстовой строке (возможно, с пунктуацией и разрывами строк)
# возвращает массив из трех самых часто встречающихся слов в порядке убывания количества вхождений.
# 		Слово представляет собой строку букв русского или латинского алфавита, необязательно
# 		содержащую один или несколько апострофов ( ').
# 		Апострофы могут стоять в начале, середине или конце слова ( допустимы все 'abc, abc', 'abc', )ab'c
# 		Любые другие символы (например #, \, , /, ....) не являются частью слова и должны рассматриваться как
# 		пробелы.
# 		Совпадения должны быть нечувствительны к регистру, а слова в результате должны быть в нижнем регистре.
# 		Если текст содержит менее трех уникальных слов, то должны быть возвращены либо первые 2,
# 		либо первое 1 слово, либо пустой массив, если текст не содержит слов
# для решения желательно использовать регулярные выражения
# """

import re
from collections import Counter


def word_3():
    words = re.findall(r"[а-я']*[а-яa-z]+[а-я']*", text.lower())
    #    wr = [(w, words.count(w)) for w in words]
    #    wr.sort(key=lambda x: x[1], reverse=True)
    #    return wr
    top_3 = Counter(words).most_common(3)
    return [tip[0] for tip in top_3]


text = """Как можно понять, этот код запрашивает пользователя сделать ввод и затем приветствует лично его.  \
       Также этот пример демонстрирует, как выводить текст, объединяя его с текстом из переменной. Достаточно  \
       заключить текст в кавычки и добавить знак плюса.  \
       Обратите внимание на пробел. Однако есть и другой способ разделения элементов —  \
       для этого используется запятая."""

text = word_3()
print(text)
